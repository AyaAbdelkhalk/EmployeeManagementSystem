// <auto-generated />
using System;
using EmployeeManagementSystem;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagementSystem.Migrations
{
    [DbContext(typeof(EMSContext))]
    [Migration("20250329102735_SeedingData")]
    partial class SeedingData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeManagementSystem.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("DepartmentHeadId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentHeadId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Name = "IT"
                        },
                        new
                        {
                            ID = -2,
                            Name = "HR"
                        },
                        new
                        {
                            ID = -3,
                            Name = "Finance"
                        },
                        new
                        {
                            ID = -4,
                            Name = "Marketing"
                        });
                });

            modelBuilder.Entity("EmployeeManagementSystem.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("EmploymentDate")
                        .HasColumnType("date");

                    b.Property<string>("JopTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Terminate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("ID");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Age = 25,
                            DepartmentId = -1,
                            EmploymentDate = new DateOnly(2025, 3, 29),
                            JopTitle = "Mid",
                            Name = "Ahmed Fahmy",
                            Rate = "Unrated",
                            Salary = 5000m,
                            Terminate = false
                        },
                        new
                        {
                            ID = -2,
                            Age = 30,
                            DepartmentId = -2,
                            EmploymentDate = new DateOnly(2025, 3, 29),
                            JopTitle = "Mid",
                            Name = "Ali Saad",
                            Rate = "Unrated",
                            Salary = 7000m,
                            Terminate = false
                        },
                        new
                        {
                            ID = -3,
                            Age = 35,
                            DepartmentId = -1,
                            EmploymentDate = new DateOnly(2025, 3, 29),
                            JopTitle = "Junior",
                            Name = "Omar Abdelbaset",
                            Rate = "Unrated",
                            Salary = 9000m,
                            Terminate = false
                        },
                        new
                        {
                            ID = -4,
                            Age = 40,
                            DepartmentId = -2,
                            EmploymentDate = new DateOnly(2025, 3, 29),
                            JopTitle = "Senior",
                            Name = "Momen Ahmed",
                            Rate = "Unrated",
                            Salary = 10000m,
                            Terminate = false
                        },
                        new
                        {
                            ID = -5,
                            Age = 40,
                            DepartmentId = -2,
                            EmploymentDate = new DateOnly(2025, 3, 29),
                            JopTitle = "Principal",
                            Name = "Ashraf Khaled",
                            Rate = "Unrated",
                            Salary = 10000m,
                            Terminate = false
                        },
                        new
                        {
                            ID = -6,
                            Age = 40,
                            DepartmentId = -2,
                            EmploymentDate = new DateOnly(2025, 3, 29),
                            JopTitle = "Fresher",
                            Name = "Taha Ragab",
                            Rate = "Unrated",
                            Salary = 10000m,
                            Terminate = false
                        },
                        new
                        {
                            ID = -7,
                            Age = 40,
                            DepartmentId = -2,
                            EmploymentDate = new DateOnly(2025, 3, 29),
                            JopTitle = "Senior",
                            Name = "Fouad Magdy",
                            Rate = "Unrated",
                            Salary = 10000m,
                            Terminate = false
                        });
                });

            modelBuilder.Entity("EmployeeManagementSystem.Department", b =>
                {
                    b.HasOne("EmployeeManagementSystem.Employee", "DepartmentHead")
                        .WithMany()
                        .HasForeignKey("DepartmentHeadId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("DepartmentHead");
                });

            modelBuilder.Entity("EmployeeManagementSystem.Employee", b =>
                {
                    b.HasOne("EmployeeManagementSystem.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EmployeeManagementSystem.Department", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
